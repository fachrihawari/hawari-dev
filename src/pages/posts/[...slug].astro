---
import { getCollection } from "astro:content";
import MainLayout from "../../layouts/MainLayout.astro";
import PageView from "../../components/PageView.svelte";
import { Icon } from 'astro-icon/components';
import Tags from "../../components/Tags.astro";

// Prerender this page at build time
export const prerender = true;

export async function getStaticPaths() {
  const blogEntries = await getCollection("posts");

  return blogEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();
---

<script>
  await fetch("/api/pageview?path=" + location.pathname, {
    method: "POST",
  });
</script>

<MainLayout title={entry.data.title} description={entry.data.description}>
  <div class="max-w-[65ch] mx-auto mb-8 dark:text-gray-300">
    <h1 class="text-4xl mb-6">
      {entry.data.title}
    </h1>

    <div class="flex items-center font-light mb-2">
      <span class="flex items-center mr-2">
        <Icon size={18} name="iconoir:calendar" class="mr-1" />
        {
          new Intl.DateTimeFormat("en-US", {
            dateStyle: "long",
            timeZone: "Asia/Jakarta",
          }).format(entry.data.publishedAt)
        }
      </span>
      <PageView path={`/posts/${entry.slug}/`} client:load />
    </div>

    <Tags tags={entry.data.tags} />

    <div class="w-full h-[2px] mt-6 bg-gray-100 dark:bg-gray-600"></div>
  </div>

  <article class="prose mx-auto dark:prose-invert">
    <Content />

    <div class="h-6"></div>
    <script
      is:inline
      slot="script"
      src="https://giscus.app/client.js"
      data-repo="fachrihawari/hawari-dev"
      data-repo-id="R_kgDOISSMkw"
      data-category="Comments"
      data-category-id="DIC_kwDOISSMk84Cb8Up"
      data-mapping="pathname"
      data-strict="0"
      data-reactions-enabled="1"
      data-emit-metadata="0"
      data-input-position="top"
      data-theme="light"
      data-lang="en"
      data-loading="lazy"
      crossorigin="anonymous"
      async></script>
  </article>
</MainLayout>

<script
  is:inline
  type="application/ld+json"
  set:html={JSON.stringify({
    "@context": "https://schema.org",
    "@type": "BlogPosting",
    headline: entry.data.title,
    datePublished: entry.data.publishedAt.toISOString(),
    dateModified: entry.data.publishedAt.toISOString(),
    author: {
      "@type": "Person",
      name: "Fachri Hawari",
      url: "https://hawari.dev",
      sameAs: [
        "https://twitter.com/fachrihawari",
        "https://github.com/fachrihawari",
        "https://linkedin.com/in/fachrihawari",
      ],
      image: "https://hawari.dev/me-square.jpg",
      jobTitle: "FullStack JavaScript Instructor",
      worksFor: "Hacktiv8",
    },
    description: entry.data.description,
    inLanguage: "en-US",
    keywords: entry.data.tags.join(","),
    mainEntityOfPage: {
      "@type": "WebPage",
      "@id": `https://hawari.dev/posts/${entry.slug}/`,
    },
  })}
/>
